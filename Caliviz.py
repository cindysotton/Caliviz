import streamlit as st
from PIL import Image
from streamlit_option_menu import option_menu
import pandas as pd
import numpy as np
import plotly.express as px
import matplotlib.pyplot as plt
import matplotlib.colors as colors

# param√©trage page d'accueil
st.set_page_config(page_title='Caliviz',
                    # icon √† modifier
                   page_icon='üåΩ', 
                   layout="wide",
                   initial_sidebar_state="expanded",
    )


# param√©trage des fichiers

# Famille des Contaminents Inorg et Mineraux
df_ino = pd.read_csv('Reformatage_Conta_Inorg_Mineraux_aliment.csv')
# Contribution LB et UB
df_contrib_LB_UB = pd.read_csv('Contribution_EAT2_LB_UB.csv')
# Contribution MB
df_contrib_MB = pd.read_csv('Contribution_EAT2_MB.csv')
# LB = hypith√®se basse
LB_pivot_ino = pd.read_csv('LB_Pivot_Inorg_Mineraux.csv')
# MB = hypith√®se moyenne
MB_pivot_ino = pd.read_csv('MB_Pivot_Inorg_Mineraux.csv')
# UB = hypith√®se haute
UB_pivot_ino = pd.read_csv('UB_Pivot_Inorg_Mineraux.csv')


# a modifier
flierprops = dict(marker="X", markerfacecolor='orange', markersize=12,
                  linestyle='none')

# logo ANSES
image_logo = Image.open('Logo Anses.jpg')
width = 80

st.image(image_logo, width=width)

# 2. horizontal menu
selected = option_menu(None, ['Pr√©sentation du projet','Risques des substances','Contamination','Contribution','Donn√©es - M√©thodologie','Contact'],
    icons=['house',"eyedropper",'basket','funnel','clipboard-data','envelope-fill'],
    menu_icon="cast", 
    default_index=0, 
    orientation="horizontal",
    styles={
                "icon": {"color": "#blank", "font-size": "13px"},
                "nav-link": {
                    "font-size": "13px",
                    "text-align": "center",
                    "margin": "0px",
                    "--hover-color": "#FF9940",
                },
                "nav-link-selected": {"background-color": "#FF9940"},        
            },)

# Pr√©sentation du projet
if selected == "Pr√©sentation du projet":
    st.title("Caliviz")
    st.header("Outil interactif permettant la visualisation des substances chimiques auxquelles est expos√©e la population fran√ßaise via son alimentation")
    image = Image.open('alimentation-banderole.jpg')
    st.image(image, use_column_width=True)
    st.subheader("Enjeux")
    st.markdown("Selon les r√©sultats de la derni√®re √©dition de l‚Äô√©tude de l‚Äôalimentation totale (EAT), le risque sanitaire ne peut √™tre exclu dans certains groupes de la population pour 12 substances pr√©sentes dans notre alimentation courante. Aujourd‚Äôhui, la surveillance alimentaire est r√©alis√©e al√©atoirement. Une optimisation de la surveillance via l‚Äôidentification et le ciblage des couples aliments/substances qui posent probl√®me est donc d‚Äôutilit√© publique, visant in fine √† prot√©ger le consommateur.")
    st.markdown("**Comment optimiser la s√©curit√© sanitaire des aliments et la surveillance des couples aliments/substances qui posent v√©ritablement probl√®me ?**")

    st.subheader("Qu'est ce que l'Etude de l'Alimentation Totale ? (EAT)")
    st.markdown("L‚ÄôAnses a pour mission de contribuer √† assurer la s√©curit√© sanitaire dans les domaines de l‚Äôalimentation, de l‚Äôenvironnement et du travail. Dans ce cadre, elle a lanc√© en 2006 sa deuxi√®me √©tude de l‚Äôalimentation totale (EAT 2), ayant pour objectifs d‚Äôune part de d√©crire les expositions alimentaires de la population fran√ßaise √† des substances d‚Äôint√©r√™t en termes de sant√© publique, d‚Äôautre part de caract√©riser les risques sanitaires li√©s √† l‚Äôalimentation et associ√©s √† ces substances [...]")
    url = "https://www.anses.fr/fr/content/%C3%A9tude-de-l%E2%80%99alimentation-totale-eat-2-l%E2%80%99anses-met-%C3%A0-disposition-les-donn%C3%A9es-de-son-analyse"
    st.markdown("[Lire la suite de l'article](%s)" % url)

    st.subheader("Quelques chiffres")
    col1, col2, col3, col4, col5 = st.columns(5)
    # chiffres en orange
    st.markdown("""
    <style>
    .big-font {
        font-size:40px !important;
        color : orange;
        text-align : center;
        padding-bottom: 0rem;
 
    }
    </style>
    """, unsafe_allow_html=True)

    # texte
    st.markdown("""
    <style>
    .texte {
        font-size:20px !important;
        text-align : center;

    }
    </style>
    """, unsafe_allow_html=True)

    with col1:
        st.markdown('<p class="big-font">212</p><p class="texte">aliments</p>', unsafe_allow_html=True)
    with col2:
        st.markdown('<p class="big-font">1319</p><p class="texte">√©chantillons</p>', unsafe_allow_html=True)
    with col3:
        st.markdown('<p class="big-font">445</p><p class="texte">substances</p>', unsafe_allow_html=True)
    with col4:
        st.markdown('<p class="big-font"> 250 000</p><p class="texte">r√©sultalts analytiques</p>', unsafe_allow_html=True)
    with col5:
        st.markdown('<p class="big-font">8</p><p class="texte">r√©gions</p>', unsafe_allow_html=True)








# Les substances et leurs risques
if selected == "Risques des substances":
    st.markdown("Comprendre les risques")

    tab1, tab2, tab3, tab4, tab5, tab6, tab7, tab8, tab9, tab10 = st.tabs(["Risque 1", "Risque 2","Risque 3","Risque 4","Risque 5","Risque 6","Risque 7","Risque 8","Risque 9","Risque 10"])

    with tab1:
        st.markdown("")

    with tab2:
        st.markdown("")
   
    with tab3:
        st.markdown("")
    
    with tab4:
        st.markdown("")
    
    with tab5:
        st.markdown("")

    with tab6:
        st.markdown("")

    with tab7:
        st.markdown("")

    with tab8:
        st.markdown("")

    with tab9:
        st.markdown("")

    with tab10:
        st.markdown("")
    
    st.markdown("D√©tails des groupes d'aliments")
    st.markdown("D√©tails des familles de substances")
       
# Notre alimentation
if selected == "Contamination":
    st.subheader("D√©finition de la notion de la contamination")

    col1, col2 = st.columns(2)
    
    with col1:
        substances = st.selectbox("Choix du groupe de substances",
        ('Contaminants inorg et min√©raux','Acrylamide', 'HAP', 'Dioxines, PCB','Perfluor√©s','Brom√©s','Phytoestrog√®nes','Mycotoxines','Additifs','Pesticides'))


    if substances == "Acrylamide":
        st.markdown("")

    if substances == "HAP":
        st.markdown("")
    
    if substances == "Dioxines, PCB":
        st.markdown("")

    if substances == "Perfluor√©s":
        st.markdown("")
    
    if substances == "Brom√©s":
        st.markdown("")

    if substances == "Contaminants inorg et min√©raux":

        st.subheader("Explications des 3 hypoth√®ses :")
        st.markdown("""Une substance est dite ¬´ d√©tect√©e ¬ª d√®s lors que l‚Äôanalyse a mis en √©vidence sa pr√©sence dans un aliment. Dans le cas contraire, la substance sera inf√©rieure √† la limite de d√©tection (<LD).

Une substance est dite ¬´ quantifi√©e ¬ª lorsqu‚Äôelle a √©t√© d√©tect√©e et que sa teneur est suffisamment importante pour √™tre quantifi√©e. Si la teneur est tr√®s basse et que l‚Äôappareil analytique n‚Äôest pas en mesure de la quantifier, elle est seulement dite ¬´ d√©tect√©e ¬ª mais inf√©rieure √† la limite de quantification (<LQ).

Pour pouvoir exploiter ces donn√©es non chiffr√©es, deux cas de figure ont √©t√© retenus conform√©ment aux lignes directrices (GEMS-Food Euro, 1995) : 
1.    le pourcentage de r√©sultats <LD et <LQ est inf√©rieur √† 60%, les donn√©es sont remplac√©es par une hypoth√®se moyenne dite ¬´ middle bound (MB) ¬ª :
* Toutes les valeurs non d√©tect√©es (<LD) sont fix√©es √† ¬Ω LD.
* Toutes les valeurs non quantifi√©es (<LQ) sont fix√©es √† ¬Ω LQ.
 
2.    le pourcentage de r√©sultats <LD et <LQ est sup√©rieur √† 60%, les donn√©es sont remplac√©es par deux hypoth√®ses :
* Hypoth√®se basse dite ¬´ lower bound (LB) ¬ª o√π toutes les valeurs non d√©tect√©es (<LD) sont fix√©es √† z√©ro et toutes les valeurs non quantifi√©es (<LQ) sont fix√©es √† la LD ou √† 0 si la LD n‚Äôest pas renseign√©e.
* Hypoth√®se haute dite ¬´ upper bound (UB) ¬ª o√π toutes les valeurs non d√©tect√©es (<LD) sont fix√©es √† la LD et toutes les valeurs non quantifi√©es (<LQ) sont fix√©es √† la LQ.\n
\n""")

        tab1, tab2, tab3 = st.tabs(["Hypoth√®se Basse", "Hypoth√®se Moyenne","Hypoth√®se Haute"])

        with tab1:
            st.markdown("")
            image = Image.open('Heatmap_ino_LB.png')
            st.image(image, use_column_width=True)
            
 
        with tab2:
            st.markdown("")
            image = Image.open('Heatmap_ino_MB.png')
            st.image(image, use_column_width=True)

  
        with tab3:
            st.markdown("")
            image = Image.open('Heatmap_ino_UB.png')
            st.image(image, use_column_width=True)

    
    if substances == "Phytoestrog√®nes":
        st.markdown("")
    
    if substances == "Mycotoxines":
        st.markdown("")
    
    if substances == "Additifs":
        st.markdown("")

    if substances == "Pesticides":
        st.markdown("")
        

    #tab1, tab2, tab3, tab4, tab5, tab6, tab7, tab8, tab9, tab10 = st.tabs(["Famille 1", "Famille 2","Famille 3","Famille 4","Famille 5","Famille 6","Famille 7","Famille 8","Famille 9","Famille 10"])

    #with tab1:
        st.markdown("")

    #with tab2:
        st.markdown("")
   
    #with tab3:
        st.markdown("")
    
    #with tab4:
        st.markdown("")
    
    #with tab5:
        st.markdown("")

    #with tab6:
        st.markdown("")

    #with tab7:
        st.markdown("")

    #with tab8:
        st.markdown("")

    #with tab9:
        st.markdown("")

    #with tab10:
        st.markdown("")

# Exposition des substances
if selected == "Contribution":
    st.subheader("D√©finition de l'exposition")
    st.markdown("""L‚Äôexposition est la quantit√© d‚Äôune substance ing√©r√©e par le consommateur. Elle se calcule pour une personne via son alimentation en prenant en compte √† la fois le niveau de contamination de tous les diff√©rents aliments / groupe d‚Äôaliments par cette substance, sa consommation individuelle de ces aliments ainsi que son poids corporel. 
L‚Äôexposition est calcul√©e pour tous les individus et une exposition moyenne de la population est ainsi calcul√©e. Elle repr√©sente la quantit√© moyenne d‚Äôune substance ing√©r√©e par la population via son r√©gime alimentaire total.
Si l‚Äôon souhaite conna√Ætre la part apport√©e par chaque groupe d‚Äôaliments dans cette quantit√© de substance ing√©r√©e par la population, on parlera de contribution √† l‚Äôexposition totale. Celle-ci, exprim√©e en pourcentage, repr√©sente la quantit√© de substance apport√©e par un groupe d‚Äôaliments par rapport √† tout le r√©gime alimentaire. La somme des contributions est √©gale √† 100%.
""")
    col1, col2, col3= st.columns(3)

    with col3:
        substances = st.selectbox(
        "Choix du groupe de substances",
        ('Contaminants inorganiques et min√©raux','Acrylamide', 'HAP', 'Dioxines, PCB','Perfluor√©s','Brom√©s','Phytoestrog√®nes','Mycotoxines','Additifs','Pesticides'))

    if substances == "Acrylamide":
        st.markdown("")

    if substances == "HAP":
        st.markdown("")
    
    if substances == "Dioxines, PCB":
        st.markdown("")

    if substances == "Perfluor√©s":
        st.markdown("")
    
    if substances == "Brom√©s":
        st.markdown("")

    if substances == "Contaminants inorganiques et min√©raux":
        st.subheader("Explications des 3 hypoth√®ses :")
        st.markdown("""Une substance est dite ¬´ d√©tect√©e ¬ª d√®s lors que l‚Äôanalyse a mis en √©vidence sa pr√©sence dans un aliment. Dans le cas contraire, la substance sera inf√©rieure √† la limite de d√©tection (<LD).

Une substance est dite ¬´ quantifi√©e ¬ª lorsqu‚Äôelle a √©t√© d√©tect√©e et que sa teneur est suffisamment importante pour √™tre quantifi√©e. Si la teneur est tr√®s basse et que l‚Äôappareil analytique n‚Äôest pas en mesure de la quantifier, elle est seulement dite ¬´ d√©tect√©e ¬ª mais inf√©rieure √† la limite de quantification (<LQ).

Pour pouvoir exploiter ces donn√©es non chiffr√©es, deux cas de figure ont √©t√© retenus conform√©ment aux lignes directrices (GEMS-Food Euro, 1995) : 
1.    le pourcentage de r√©sultats <LD et <LQ est inf√©rieur √† 60%, les donn√©es sont remplac√©es par une hypoth√®se moyenne dite ¬´ middle bound (MB) ¬ª :
* Toutes les valeurs non d√©tect√©es (<LD) sont fix√©es √† ¬Ω LD.
* Toutes les valeurs non quantifi√©es (<LQ) sont fix√©es √† ¬Ω LQ.
 
2.    le pourcentage de r√©sultats <LD et <LQ est sup√©rieur √† 60%, les donn√©es sont remplac√©es par deux hypoth√®ses :
* Hypoth√®se basse dite ¬´ lower bound (LB) ¬ª o√π toutes les valeurs non d√©tect√©es (<LD) sont fix√©es √† z√©ro et toutes les valeurs non quantifi√©es (<LQ) sont fix√©es √† la LD ou √† 0 si la LD n‚Äôest pas renseign√©e.
* Hypoth√®se haute dite ¬´ upper bound (UB) ¬ª o√π toutes les valeurs non d√©tect√©es (<LD) sont fix√©es √† la LD et toutes les valeurs non quantifi√©es (<LQ) sont fix√©es √† la LQ.\n
\n""")
        tab1, tab2, tab3 = st.tabs(["Hypoth√®se Basse", "Hypoth√®se Moyenne","Hypoth√®se Haute"])

        with tab1:
            st.markdown("**texte explicatif substances manquantes**")
            
            col1, col2, col3= st.columns(3)

            with col3:
            #SelectBox
            contrib_option_substances_ino_ub = st.selectbox('S√©lectionner les substances que vous souhaitez analyser :',
                                                df_contrib_LB_UB['Substance'].unique(),
                                                key='substances_ub')

            # Convertir la valeur unique en liste
            selected_substances = [contrib_option_substances_ino_ub]
            # Filtrer les donn√©es en fonction des options s√©lectionn√©es
            df_filtered_contrib = df_contrib_LB_UB[df_contrib_LB_UB['Substance'].isin(selected_substances)]

            # Selected substances
            if len(contrib_option_substances_ino_ub) == 0:
                st.warning('Merci de s√©lectionner au moins une substance')

            # Filtrer les donn√©es en fonction des options s√©lectionn√©es
            df_filtered_contrib = df_contrib_LB_UB[df_contrib_LB_UB['Substance'].isin([contrib_option_substances_ino_ub])]

            # V√©rifier si des substances et familles d'aliments ont √©t√© s√©lectionn√©es
            fig = px.bar(df_filtered_contrib, x='Contribution_UB', y="Groupe d'aliments", color='Substance')
            fig.update_xaxes(title="% de la contribution √† l‚Äôexposition totale")
            fig.update_yaxes(title=None)  # Supprime le titre de l'axe y
            fig.update_layout(
                    yaxis={'categoryorder': 'total ascending'},
                    legend_title_text='Substances',
                    #ascending=True
                    height=700,
                    width=1200,  # Augmente la largeur du graphique (ajustez la valeur selon vos besoins)
                    margin=dict(l=50, r=50, t=50, b=50, pad=4)  # D√©finit les marges pour centrer le graphique
                )
            st.plotly_chart(fig)


        with tab2:
            st.markdown("")
           
             #SelectBox
            contrib_option_substances_ino_mb = st.selectbox('S√©lectionner les substances que vous souhaitez analyser :',
                                                           df_contrib_MB['Substance'].unique())
            # Convertir la valeur unique en liste
            selected_substances = [contrib_option_substances_ino_mb]
            # Filtrer les donn√©es en fonction des options s√©lectionn√©es
            df_filtered_contrib = df_contrib_MB[df_contrib_MB['Substance'].isin(selected_substances)]

            # Selected substances
            if len(contrib_option_substances_ino_mb) == 0:
                st.warning('Merci de s√©lectionner au moins une substance')

            # Filtrer les donn√©es en fonction des options s√©lectionn√©es
            df_filtered_contrib = df_contrib_MB[df_contrib_MB['Substance'].isin([contrib_option_substances_ino_mb])]

            # V√©rifier si des substances et familles d'aliments ont √©t√© s√©lectionn√©es
            fig = px.bar(df_filtered_contrib, x='Contribution_MB', y="Groupe d'aliments", color='Substance')
            fig.update_xaxes(title="Contribution de la substance sur 100")
            fig.update_yaxes(title=None)  # Supprime le titre de l'axe y
            fig.update_layout(
                    yaxis={'categoryorder': 'total ascending'},
                    legend_title_text='Substances',
                    #ascending=True
                    height=700,
                    width=1200,  # Augmente la largeur du graphique (ajustez la valeur selon vos besoins)
                    margin=dict(l=50, r=50, t=50, b=50, pad=4)  # D√©finit les marges pour centrer le graphique
                )
            st.plotly_chart(fig)

        with tab3:
            st.markdown("**texte explicatif substances manquantes**")
            
            #SelectBox
            contrib_option_substances_ino_lb = st.selectbox('S√©lectionner les substances que vous souhaitez analyser :',
                                                           df_contrib_LB_UB['Substance'].unique())
            # Convertir la valeur unique en liste
            selected_substances = [contrib_option_substances_ino_lb]
            # Filtrer les donn√©es en fonction des options s√©lectionn√©es
            df_filtered_contrib = df_contrib_LB_UB[df_contrib_LB_UB['Substance'].isin(selected_substances)]

            # Selected substances
            if len(contrib_option_substances_ino_lb) == 0:
                st.warning('Merci de s√©lectionner au moins une substance')

            # Filtrer les donn√©es en fonction des options s√©lectionn√©es
            df_filtered_contrib = df_contrib_LB_UB[df_contrib_LB_UB['Substance'].isin([contrib_option_substances_ino_lb])]

            # V√©rifier si des substances et familles d'aliments ont √©t√© s√©lectionn√©es
            fig = px.bar(df_filtered_contrib, x='Contribution_LB', y="Groupe d'aliments", color='Substance')
            fig.update_xaxes(title="Contribution de la substance sur 100")
            fig.update_yaxes(title=None)  # Supprime le titre de l'axe y
            fig.update_layout(
                    yaxis={'categoryorder': 'total ascending'},
                    legend_title_text='Substances',
                    #ascending=True
                    height=700,
                    width=1200,  # Augmente la largeur du graphique (ajustez la valeur selon vos besoins)
                    margin=dict(l=50, r=50, t=50, b=50, pad=4)  # D√©finit les marges pour centrer le graphique
                )
            st.plotly_chart(fig)

    
    if substances == "Phytoestrog√®nes":
        st.markdown("")
    
    if substances == "Mycotoxines":
        st.markdown("")
    
    if substances == "Additifs":
        st.markdown("")

    if substances == "Pesticides":
        st.markdown("")
    


    


# Donn√©es - M√©thodologie
if selected == 'Donn√©es - M√©thodologie':
    st.header("Liens de nos donn√©es")
    st.subheader("Donn√©es fournies par le gouvernement")
    url = "https://www.data.gouv.fr/fr/datasets/bisphenol-a/"
    st.markdown("[Bisphenol A](%s)" % url)
    url = "https://www.data.gouv.fr/fr/datasets/donnees-regionales-eat2-etude-de-l-alimentation-totale/"
    st.markdown("[Etudes EAT2 ](%s)" % url)
    
    st.header("Notre m√©thodologie")
    st.subheader("EAT2 - M√©thodologie des valeurs manques")
    st.markdown("""Les diff√©rents types de valeurs pr√©sents dans les fichiers utilis√©s dans le cadre du projet Caliviz √©taient les suivantes :
* ND : non d√©tect√© (analytique) (donn√©es censur√©es)
* NQ : non quantifi√© (analytique) (donn√©es censur√©es)
* NR : analyse non r√©alis√©e
* Valeur quantifi√©e

Les donn√©es censur√©es ont √©t√© trait√©es en utilisant les hypoth√®ses de l‚ÄôOMS (1995) pour le traitement de la censure et les valeurs de LOD (limite de d√©tection) et LOQ (limite de quantification) correspondants aux substances chimiques √©tudi√©es. Plusieurs mod√®les de formatage ont √©t√© ainsi √©tablis en fonction des informations √† disposition.

Formatage de type 1 : Contaminants inorganiques et min√©raux - Acrylamide\n
Dans ce cas, les donn√©es censur√©es sont uniquement sous la forme ND/NQ et nous avons acc√®s aux limites analytiques.
* Hypoth√®se moyenne (MB) : ND = LOD/2 et NQ = LOQ/2
* Hypoth√®se basse (LB) : ND = 0 et NQ = LOD
* Hypoth√®se haute (UB) : ND = LOD et NQ = LOQ

Formatage de type 2 : HAP - Dioxynes, PC8 - Perfluor√©s - Brom√©s\n
Dans ce cas, les donn√©es censur√©es sont sous la forme ‚Äú<valeur‚Äù et nous n‚Äôavons pas acc√®s aux limites analytiques.
* Hypoth√®se moyenne (MB) : <valeur = valeur/2
* Hypoth√®se basse (LB) : <valeur = 0
* Hypoth√®se haute (UB) : <valeur = valeur\n

Formatage de type 3 : Additifs - Pesticides\n
Dans ce cas les donn√©es censur√©es sont sous la forme ND(valeur)/NQ(valeur) et nous n‚Äôavons pas acc√®s aux limites analytiques.
* Hypoth√®se moyenne (MB) : ND(valeur) = valeur/2 et NQ(valeur) = valeur/2
* Hypoth√®se basse (LB) : ND(valeur) = 0 et NQ(valeur) = 0
* Hypoth√®se haute (UB) : ND(valeur) = valeur et NQ(valeur) = valeur
""")

    st.subheader("Retraitement des donn√©es par nos √©quipes")
    
    st.markdown("Aper√ßu de nos donn√©es par groupe d'aliments")

    st.markdown("Aper√ßu de nos donn√©es globales")



     

# Condlusion
if selected == "Contact":
    st.markdown("")
    st.markdown("")
